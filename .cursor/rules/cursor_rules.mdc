---
description: Guidelines for creating and maintaining Cursor rules to ensure consistency and effectiveness.
globs: .cursor/rules/*.mdc
alwaysApply: true
---

- **Required Rule Structure:**
  ```markdown
  ---
  description: Clear, one-line description of what the rule enforces
  globs: path/to/files/*.ext, other/path/**/*
  alwaysApply: boolean
  ---

  - **Main Points in Bold**
    - Sub-points with details
    - Examples and explanations
  ```

- **File References:**
  - Use `[filename](mdc:path/to/file)` ([filename](mdc:filename)) to reference files
  - Example: [prisma.mdc](mdc:.cursor/rules/prisma.mdc) for rule references
  - Example: [schema.prisma](mdc:prisma/schema.prisma) for code references

- **Code Examples:**
  - Use language-specific code blocks
  ```typescript
  // ✅ DO: Show good examples
  const goodExample = true;
  
  // ❌ DON'T: Show anti-patterns
  const badExample = false;
  ```

- **Rule Content Guidelines:**
  - Start with high-level overview
  - Include specific, actionable requirements
  - Show examples of correct implementation
  - Reference existing code when possible
  - Keep rules DRY by referencing other rules

- **Rule Maintenance:**
  - Update rules when new patterns emerge
  - Add examples from actual codebase
  - Remove outdated patterns
  - Cross-reference related rules

- **Best Practices:**
  - Use bullet points for clarity
  - Keep descriptions concise
  - Include both DO and DON'T examples
  - Reference actual code over theoretical examples
  - Use consistent formatting across rules

- **Temporary Work Directory:**
  - **All temporary programming and testing work MUST be done in the repo‑root `tmp/` directory.**
  - Use `tmp/` for experimental code, quick tests, debugging scripts, and temporary files
  - Keep the main project structure clean by isolating temporary work
  - Examples of appropriate `tmp/` usage:
    - Quick test scripts (`tmp/test-script.js`)
    - Experimental features (`tmp/experiment-feature/`)
    - Debugging utilities (`tmp/debug-helper.js`)
    - Temporary data files (`tmp/test-data.json`)
  - **DO NOT** create temporary files in main source directories (`src/`, `scripts/`, etc.)
  - Add `tmp/` to [gitignore](mdc:.gitignore); do not commit its contents. If you must keep the directory, commit only a `tmp/.gitkeep` placeholder.
    ```gitignore
    tmp/**
    !tmp/.gitkeep
    ```
  - Exclude `tmp/` from linters/formatters/tests (e.g., [eslintignore](mdc:.eslintignore), [prettierignore](mdc:.prettierignore), test runner config).
  - Never import from `tmp/` in production code.
  - Clean up `tmp/` regularly to prevent accumulation of temporary files